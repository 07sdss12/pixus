// codeplaySprite Class// (cc)2009 codeplay// By Jam Zhang// jammind@gmail.compackage codeplay.display{	import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.geom.Point;	import flash.geom.Rectangle;		public class codeplaySprite extends Sprite{			private var dragOffset:Point;			private var dragLockCenter:Boolean;			private var dragBounds:Rectangle;			public function codeplayStartDrag(lockCenter:Boolean = false, bounds:Rectangle = null):void{				if(stage==null)					throw 'codeplaySprite.codeplayStartDrag() only works with instances added to stage.';				else if(parent==null)					throw 'codeplaySprite.codeplayStartDrag() only works with a child instance.';				else {					dragLockCenter=lockCenter;					dragBounds=bounds;					dragOffset=new Point(parent.mouseX-x, parent.mouseY-y);					stage.addEventListener(MouseEvent.MOUSE_MOVE,codeplayStartDragHandleMouse);					stage.addEventListener(MouseEvent.MOUSE_UP,codeplayStartDragHandleMouse);				}			}			public function codeplayStartDragHandleMouse(e:MouseEvent):void{				switch(e.type){					case MouseEvent.MOUSE_MOVE:						var x1:Number=parent.mouseX;						var y1:Number=parent.mouseY;						if(!dragLockCenter){							x1-=dragOffset.x;							y1-=dragOffset.y;						}						if(dragBounds!=null){							x1=Math.max(dragBounds.x,Math.min(dragBounds.x+dragBounds.width,x1));							y1=Math.max(dragBounds.y,Math.min(dragBounds.y+dragBounds.height,y1));						}						x=x1;						y=y1;						break;					case MouseEvent.MOUSE_UP:						stage.removeEventListener(MouseEvent.MOUSE_MOVE,codeplayStartDragHandleMouse);						stage.removeEventListener(MouseEvent.MOUSE_UP,codeplayStartDragHandleMouse);						break;				}			}		}}
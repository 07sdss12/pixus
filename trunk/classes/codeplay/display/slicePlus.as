// slicePlus class// A Enhancement to 9-Slice// (cc)2008-2010 codeplay// By Jam Zhang// jammind@gmail.compackage codeplay.display{	import flash.display.DisplayObject;	import flash.display.Sprite;	import flash.display.MovieClip;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.Loader;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.geom.Point;	import flash.geom.Rectangle;	import flash.net.URLRequest;	import codeplay.display.slicePlusSlice;	public class slicePlus extends Sprite {		const DEFAULT_WIDTH:int=540;		const DEFAULT_HEIGHT:int=280;		private var loader:Loader=new Loader();		private var bd:BitmapData;		private var skin:XML;		private var _minWidth:int=-1;		private var _minHeight:int=-1;		private var _maxWidth:int=65535;		private var _maxHeight:int=65535;		var minWidthTop:int=0;		var minWidthBottom:int=0;		var minHeightLeft:int=0;		var minHeightRight:int=0;		public var sliceWidth,sliceHeight:int;		var TL,TC,TR,L,R,BL,BC,BR:slicePlusSlice;		public function slicePlus(skinxml:XML, w:int=DEFAULT_WIDTH, h:int=DEFAULT_HEIGHT):void {			skin=skinxml;			sliceWidth=w;			sliceHeight=h;			addEventListener(Event.ADDED_TO_STAGE,init);			loader.contentLoaderInfo.addEventListener(Event.COMPLETE,handleComplete);			loader.load(new URLRequest(skin.file.@filename));		}		function init(event:Event) {		}		function handleComplete(event:Event) {			if(skin.sizelimit.length()>0) {				if(skin.sizelimit.@minw.length()>0) {					_minWidth=int(skin.sizelimit.@minw);				}				if(skin.sizelimit.@minh.length()>0) {					_minHeight=int(skin.sizelimit.@minh);				}				if(skin.sizelimit.@maxw.length()>0) {					_maxWidth=int(skin.sizelimit.@maxw);				}				if(skin.sizelimit.@maxh.length()>0) {					_maxHeight=int(skin.sizelimit.@maxh);				}			}			bd=new BitmapData(loader.width,loader.height,true,0x000000);			bd.draw(loader);			for each (var s:XML in skin..slice) {				addChild(new slicePlusSlice(bd,s,this));			}			resize(sliceWidth,sliceHeight);			dispatchEvent(new Event(Event.RESIZE));		}		public function get minWidth():int{			return (_minWidth>0)?_minWidth:Math.max(minWidthTop,minWidthBottom);		}		public function get minHeight():int{			return (_minHeight>0)?_minHeight:Math.max(minHeightLeft,minHeightRight);		}				public function get maxWidth():int{			return _maxWidth;		}		public function get maxHeight():int{			return _maxHeight;		}				public function setWidth(w:int):void{			sliceWidth=Math.min(Math.max(w,minWidth),maxWidth);			dispatchEvent(new Event(Event.RESIZE));		}		public function setHeight(h:int):void{			sliceHeight=Math.min(Math.max(h,minHeight),maxHeight);			dispatchEvent(new Event(Event.RESIZE));		}		public function resize(w:int,h:int):void{			sliceWidth=Math.min(Math.max(w,minWidth),maxWidth);			sliceHeight=Math.min(Math.max(h,minHeight),maxHeight);			dispatchEvent(new Event(Event.RESIZE));		}	}}
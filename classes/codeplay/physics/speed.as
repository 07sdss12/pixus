// speed class// (cc)2009 codeplay// By Jam Zhang// jam@01media.cnpackage codeplay.physics{	import flash.display.Sprite;	import flash.events.Event;	public class speed extends Sprite {		private var lastValue:Number, currentValue:Number;		private var log:Array=[];		private var _bufferFrames:int;		private var logged:Boolean=false;		public function speed(initValue:Number=0,bufferFrames:int=0) {			lastValue=currentValue=initValue;			_bufferFrames=bufferFrames;			addEventListener(Event.ENTER_FRAME,handleEnterFrame);		}		public function set value(n:Number):void{//			trace('value='+n);			logged=true;			currentValue=n;			logSpeed();		}		function logSpeed():void{//			if(currentValue!=lastValue){//				trace('lastValue='+lastValue);//				trace('currentValue='+currentValue);//			}//			trace('logSpeed '+(currentValue-lastValue));			log.push(currentValue-lastValue);			lastValue=currentValue;			if(log.length>_bufferFrames+1)				log.shift();		}		public function get currentSpeed():Number{			var sum:Number=0;			for each (var s:Number in log){				sum+=s;			}//			trace('currentSpeed='+sum/log.length);			return sum/log.length;		}		function handleEnterFrame(e:Event):void{			if(logged){				logged=false;//				trace('logged');			} else {				logSpeed();			}		}		public function dispose():void{			removeEventListener(Event.ENTER_FRAME,handleEnterFrame);		}	}}